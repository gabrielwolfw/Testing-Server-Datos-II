        -:    0:Source:/usr/include/boost/system/detail/std_interoperability.hpp
        -:    0:Graph:/home/gabrielwolf/Documents/Extraclase-II/Testing-Server-Datos-II/cmake-build-debug/CMakeFiles/test_tuto.dir/main.cpp.gcno
        -:    0:Data:/home/gabrielwolf/Documents/Extraclase-II/Testing-Server-Datos-II/cmake-build-debug/CMakeFiles/test_tuto.dir/main.cpp.gcda
        -:    0:Runs:1
        -:    1:// Support for interoperability between Boost.System and <system_error>
        -:    2://
        -:    3:// Copyright 2018 Peter Dimov
        -:    4://
        -:    5:// Distributed under the Boost Software License, Version 1.0. (See accompanying
        -:    6:// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
        -:    7://
        -:    8:// See library home page at http://www.boost.org/libs/system
        -:    9:
        -:   10:#include <system_error>
        -:   11:#include <map>
        -:   12:#include <memory>
        -:   13:#include <mutex>
        -:   14:
        -:   15://
        -:   16:
        -:   17:namespace boost
        -:   18:{
        -:   19:
        -:   20:namespace system
        -:   21:{
        -:   22:
        -:   23:namespace detail
        -:   24:{
        -:   25:
        -:   26:class BOOST_SYMBOL_VISIBLE std_category: public std::error_category
        -:   27:{
        -:   28:private:
        -:   29:
        -:   30:    boost::system::error_category const * pc_;
        -:   31:
        -:   32:public:
        -:   33:
function _ZN5boost6system6detail12std_categoryC2EPKNS0_14error_categoryEj called 0 returned 0% blocks executed 0%
    #####:   34:    explicit std_category( boost::system::error_category const * pc, unsigned id ): pc_( pc )
    %%%%%:   34-block  0
call    0 never executed
        -:   35:    {
        -:   36:        if( id != 0 )
        -:   37:        {
        -:   38:#if defined(_MSC_VER) && defined(_CPPLIB_VER) && _MSC_VER >= 1900 && _MSC_VER < 2000
        -:   39:
        -:   40:            // Poking into the protected _Addr member of std::error_category
        -:   41:            // is not a particularly good programming practice, but what can
        -:   42:            // you do
        -:   43:
        -:   44:            _Addr = id;
        -:   45:
        -:   46:#endif
        -:   47:        }
    #####:   48:    }
        -:   49:
function _ZNK5boost6system6detail12std_category4nameEv called 0 returned 0% blocks executed 0%
    #####:   50:    const char * name() const BOOST_NOEXCEPT BOOST_OVERRIDE
        -:   51:    {
    #####:   52:        return pc_->name();
    %%%%%:   52-block  0
call    0 never executed
        -:   53:    }
        -:   54:
function _ZNK5boost6system6detail12std_category7messageB5cxx11Ei called 0 returned 0% blocks executed 0%
    #####:   55:    std::string message( int ev ) const BOOST_OVERRIDE
        -:   56:    {
    #####:   57:        return pc_->message( ev );
    %%%%%:   57-block  0
call    0 never executed
        -:   58:    }
        -:   59:
function _ZNK5boost6system6detail12std_category23default_error_conditionEi called 0 returned 0% blocks executed 0%
    #####:   60:    std::error_condition default_error_condition( int ev ) const BOOST_NOEXCEPT BOOST_OVERRIDE
        -:   61:    {
    #####:   62:        return pc_->default_error_condition( ev );
    %%%%%:   62-block  0
call    0 never executed
call    1 never executed
        -:   63:    }
        -:   64:
        -:   65:    bool equivalent( int code, const std::error_condition & condition ) const BOOST_NOEXCEPT BOOST_OVERRIDE;
        -:   66:    bool equivalent( const std::error_code & code, int condition ) const BOOST_NOEXCEPT BOOST_OVERRIDE;
        -:   67:};
        -:   68:
        -:   69:#if !defined(__SUNPRO_CC) // trailing __global is not supported
        -:   70:inline std::error_category const & to_std_category( boost::system::error_category const & cat ) BOOST_SYMBOL_VISIBLE;
        -:   71:#endif
        -:   72:
        -:   73:struct cat_ptr_less
        -:   74:{
function _ZNK5boost6system6detail12cat_ptr_lessclEPKNS0_14error_categoryES5_ called 0 returned 0% blocks executed 0%
    #####:   75:    bool operator()( boost::system::error_category const * p1, boost::system::error_category const * p2 ) const BOOST_NOEXCEPT
        -:   76:    {
    #####:   77:        return *p1 < *p2;
    %%%%%:   77-block  0
call    0 never executed
        -:   78:    }
        -:   79:};
        -:   80:
function _ZN5boost6system6detail15to_std_categoryERKNS0_14error_categoryE called 0 returned 0% blocks executed 0%
    #####:   81:inline std::error_category const & to_std_category( boost::system::error_category const & cat )
        -:   82:{
    #####:   83:    if( cat == boost::system::system_category() )
    %%%%%:   83-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:   84:    {
    #####:   85:        static const std_category system_instance( &cat, 0x1F4D7 );
    %%%%%:   85-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:   85-block  1
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:   85-block  2
call    5 never executed
call    6 never executed
call    7 never executed
    #####:   86:        return system_instance;
    %%%%%:   86-block  0
        -:   87:    }
    #####:   88:    else if( cat == boost::system::generic_category() )
    %%%%%:   88-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:   89:    {
    #####:   90:        static const std_category generic_instance( &cat, 0x1F4D3 );
    %%%%%:   90-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:   90-block  1
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:   90-block  2
call    5 never executed
call    6 never executed
call    7 never executed
    #####:   91:        return generic_instance;
    %%%%%:   91-block  0
        -:   92:    }
        -:   93:    else
        -:   94:    {
        -:   95:        typedef std::map< boost::system::error_category const *, std::unique_ptr<std_category>, cat_ptr_less > map_type;
        -:   96:
    #####:   97:        static map_type map_;
    %%%%%:   97-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:   97-block  1
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:   97-block  2
call    5 never executed
call    6 never executed
call    7 never executed
        -:   98:        static std::mutex map_mx_;
        -:   99:
    #####:  100:        std::lock_guard<std::mutex> guard( map_mx_ );
    %%%%%:  100-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  101:
    #####:  102:        map_type::iterator i = map_.find( &cat );
    %%%%%:  102-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:  102-block  1
        -:  103:
    #####:  104:        if( i == map_.end() )
    %%%%%:  104-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  105:        {
    #####:  106:            std::unique_ptr<std_category> p( new std_category( &cat, 0 ) );
    %%%%%:  106-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  106-block  1
call    3 never executed
call    4 never executed
        -:  107:
    #####:  108:            std::pair<map_type::iterator, bool> r = map_.insert( map_type::value_type( &cat, std::move( p ) ) );
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  108-block  0
call    5 never executed
    $$$$$:  108-block  1
call    6 never executed
    $$$$$:  108-block  2
    $$$$$:  108-block  3
        -:  109:
    #####:  110:            i = r.first;
    #####:  111:        }
call    0 never executed
    $$$$$:  111-block  0
call    1 never executed
        -:  112:
    #####:  113:        return *i->second;
    %%%%%:  113-block  0
call    0 never executed
call    1 never executed
    #####:  114:    }
call    0 never executed
    $$$$$:  114-block  0
call    1 never executed
        -:  115:}
        -:  116:
function _ZNK5boost6system6detail12std_category10equivalentEiRKSt15error_condition called 0 returned 0% blocks executed 0%
    #####:  117:inline bool std_category::equivalent( int code, const std::error_condition & condition ) const BOOST_NOEXCEPT
        -:  118:{
    #####:  119:    if( condition.category() == *this )
    %%%%%:  119-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  120:    {
    #####:  121:        boost::system::error_condition bn( condition.value(), *pc_ );
    %%%%%:  121-block  0
call    0 never executed
call    1 never executed
    #####:  122:        return pc_->equivalent( code, bn );
call    0 never executed
        -:  123:    }
    #####:  124:    else if( condition.category() == std::generic_category() || condition.category() == boost::system::generic_category() )
    %%%%%:  124-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  124-block  1
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  124-block  2
    %%%%%:  124-block  3
    %%%%%:  124-block  4
branch 10 never executed
branch 11 never executed
        -:  125:    {
    #####:  126:        boost::system::error_condition bn( condition.value(), boost::system::generic_category() );
    %%%%%:  126-block  0
call    0 never executed
call    1 never executed
call    2 never executed
    #####:  127:        return pc_->equivalent( code, bn );
call    0 never executed
        -:  128:    }
        -:  129:
        -:  130:#ifndef BOOST_NO_RTTI
        -:  131:
    #####:  132:    else if( std_category const* pc2 = dynamic_cast< std_category const* >( &condition.category() ) )
    %%%%%:  132-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  132-block  1
    %%%%%:  132-block  2
    %%%%%:  132-block  3
branch  3 never executed
branch  4 never executed
        -:  133:    {
    #####:  134:        boost::system::error_condition bn( condition.value(), *pc2->pc_ );
    %%%%%:  134-block  0
call    0 never executed
call    1 never executed
    #####:  135:        return pc_->equivalent( code, bn );
call    0 never executed
        -:  136:    }
        -:  137:
        -:  138:#endif
        -:  139:
        -:  140:    else
        -:  141:    {
    #####:  142:        return default_error_condition( code ) == condition;
    %%%%%:  142-block  0
call    0 never executed
call    1 never executed
        -:  143:    }
        -:  144:}
        -:  145:
function _ZNK5boost6system6detail12std_category10equivalentERKSt10error_codei called 0 returned 0% blocks executed 0%
    #####:  146:inline bool std_category::equivalent( const std::error_code & code, int condition ) const BOOST_NOEXCEPT
        -:  147:{
    #####:  148:    if( code.category() == *this )
    %%%%%:  148-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  149:    {
    #####:  150:        boost::system::error_code bc( code.value(), *pc_ );
    %%%%%:  150-block  0
call    0 never executed
call    1 never executed
    #####:  151:        return pc_->equivalent( bc, condition );
call    0 never executed
        -:  152:    }
    #####:  153:    else if( code.category() == std::generic_category() || code.category() == boost::system::generic_category() )
    %%%%%:  153-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  153-block  1
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  153-block  2
    %%%%%:  153-block  3
    %%%%%:  153-block  4
branch 10 never executed
branch 11 never executed
        -:  154:    {
    #####:  155:        boost::system::error_code bc( code.value(), boost::system::generic_category() );
    %%%%%:  155-block  0
call    0 never executed
call    1 never executed
call    2 never executed
    #####:  156:        return pc_->equivalent( bc, condition );
call    0 never executed
        -:  157:    }
        -:  158:
        -:  159:#ifndef BOOST_NO_RTTI
        -:  160:
    #####:  161:    else if( std_category const* pc2 = dynamic_cast< std_category const* >( &code.category() ) )
    %%%%%:  161-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  161-block  1
    %%%%%:  161-block  2
    %%%%%:  161-block  3
branch  3 never executed
branch  4 never executed
        -:  162:    {
    #####:  163:        boost::system::error_code bc( code.value(), *pc2->pc_ );
    %%%%%:  163-block  0
call    0 never executed
call    1 never executed
    #####:  164:        return pc_->equivalent( bc, condition );
call    0 never executed
        -:  165:    }
        -:  166:#endif
        -:  167:
    #####:  168:    else if( *pc_ == boost::system::generic_category() )
    %%%%%:  168-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  169:    {
    #####:  170:        return std::generic_category().equivalent( code, condition );
    %%%%%:  170-block  0
call    0 never executed
        -:  171:    }
        -:  172:    else
        -:  173:    {
    #####:  174:        return false;
    %%%%%:  174-block  0
        -:  175:    }
        -:  176:}
        -:  177:
        -:  178:} // namespace detail
        -:  179:
        -:  180:} // namespace system
        -:  181:
        -:  182:} // namespace boost
